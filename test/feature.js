const test = require("node:test")
const assert = require("node:assert")
const puppeteer = require("puppeteer")
const express = require("express")
const path = require("path")

function delay(time) {
  return new Promise(function (resolve) {
    setTimeout(resolve, time)
  })
}

test("it is defined", async () => {
  const app = express()
  app.use(express.static(path.join(__dirname, "../build")))
  app.use(express.static(path.join(__dirname, "./fixture")))
  const server = await new Promise((resolve) => {
    const server = app.listen(0, () => {
      resolve(server)
    })
  })
  const { port } = server.address()
  const browser = await puppeteer.launch({ headless: false })
  const page = await browser.newPage()
  await page.goto(`http://localhost:${port}`)
  await delay(1000)
  await page.waitForSelector("#kinetic")
  await page.waitForSelector("#right")
  await page.click("#right")
  await delay(1000)
  await page.waitForSelector(".kinetic-decelerating-right")
  await page.waitForSelector("#down")
  await page.click("#down")
  await delay(1000)
  await page.waitForSelector(".kinetic-decelerating-down")
  await page.waitForSelector("#left")
  await page.click("#left")
  await delay(1000)
  await page.waitForSelector(".kinetic-decelerating-left")
  await page.waitForSelector("#up")
  await page.click("#up")
  await delay(1000)
  await page.waitForSelector(".kinetic-decelerating-up")
  const content = await page.content()
  assert(content.includes("index.js"))
  await browser.close()
  await server.close()
})
